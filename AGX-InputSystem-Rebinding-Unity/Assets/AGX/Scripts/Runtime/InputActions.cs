//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/AGX/Scripts/Runtime/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace AGX.Runtime
{
    public partial class @InputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""ad81a781-cdc0-4d61-abb1-b058628474fa"",
            ""actions"": [
                {
                    ""name"": ""Gameplay Move"",
                    ""type"": ""Value"",
                    ""id"": ""4fd14f9f-52fc-415d-ae4a-c053633de383"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Gameplay Aim"",
                    ""type"": ""Value"",
                    ""id"": ""167e270a-7386-4f52-9aae-5c6ea8f71c9f"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Gameplay Interact"",
                    ""type"": ""Button"",
                    ""id"": ""1b2a305c-cbbb-4d10-afda-a003457c08f8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gameplay Attack Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""b14bcd07-64f9-4df4-9c1a-195928ccf61e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gameplay Quick Heal"",
                    ""type"": ""Button"",
                    ""id"": ""2c01cf22-5370-494b-a956-11ec7a487cf3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gameplay Exit"",
                    ""type"": ""Button"",
                    ""id"": ""641acd43-61dd-4a5b-9740-76dcc5cb377f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gameplay Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""4c84f6a9-cd74-4ad0-b6eb-f9a3b99c651b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard WASD"",
                    ""id"": ""f66e316a-9d68-44de-8340-d7605bea6575"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""49bfcc99-5772-441b-a4c1-d3ef1dfcbaa4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6300ac9a-1649-499e-be84-0080f6ad8437"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ac9c6c2a-a9fb-4901-a6d2-ada697304eeb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""da1abadc-67d1-442a-9d12-56d50c4d5f8e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard Arrows"",
                    ""id"": ""68054e81-a135-4acb-8ffb-f5cd10c6833f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2ecb5b0e-5546-4bd9-ba2b-d83eb4449e16"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f172ffcb-3b63-4569-85c8-e284a73f45f3"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3e63a0a1-c3ba-4bc2-a1f0-231fcdac1f18"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2fcff567-09de-4afd-86c6-5d72c64253a1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b756edbf-21be-4ff3-827d-4d0f7e0bfb7c"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Gameplay Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cd0df25-bf9b-427b-b499-3df536ffd4bb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5f5bbf7-9624-4160-a300-66a571e054bb"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ba4b5c0-0fce-4682-a4fe-ce281ed20c6a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Gameplay Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b04636a-116c-4d0d-88a2-e9827f6ca94e"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Attack Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb1196b2-4c98-4cbd-a922-527d93f3cf84"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Attack Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9aac01f8-f4ba-4879-8d56-83ee43d73d14"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Gameplay Attack Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0c8b299-dee3-4c05-bb02-dc66d7a966d1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff93e26e-d573-49a8-b57b-d8c90cfe4fa5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Triggers [Gamepad]"",
                    ""id"": ""c2642302-6332-4366-8f88-cf913e841b78"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gameplay Exit"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""cb162543-be0b-4be8-a8dc-9258a60d9e04"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Gameplay Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""e3bd8ec0-f98e-4469-9d6f-71caf771e08c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Gameplay Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""aea8491e-3497-4682-8340-b43935a80622"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fbe2b70-de26-40a1-9902-6f962829c4af"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a52caa0-5a85-406d-af3a-5e39ce7b5307"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Gameplay Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6461e77-927a-4e20-ad67-994910315f86"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Quick Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da3eb924-81e1-425f-8301-111957034830"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Quick Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fcc01e2-3c1d-4fe5-9b78-2fa1d1bfc200"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Gameplay Quick Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49ff32a9-3335-4b48-8c3a-5a5bf8f53376"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fbe9019-f2e5-4350-a45c-f274a2f06960"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Gameplay Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7d38c8b-9fe6-44be-ba54-b1eff33a5e6d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Gameplay Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Inventory"",
            ""id"": ""a6174365-1052-4566-bc1a-8326cb553bb7"",
            ""actions"": [
                {
                    ""name"": ""Inventory Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""5805ca4d-8023-4889-8ca1-62e30ff0f414"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Inventory Select Slot 1"",
                    ""type"": ""Button"",
                    ""id"": ""b876248e-351d-4926-b3a3-2f5bd4a55d48"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Select Slot 2"",
                    ""type"": ""Button"",
                    ""id"": ""803aa1bd-28b6-4e5b-a466-5acd9e9ed405"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Select Slot 3"",
                    ""type"": ""Button"",
                    ""id"": ""e44cc387-60d0-4293-ae9c-de6304966ff4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Select Slot 4"",
                    ""type"": ""Button"",
                    ""id"": ""f89346b2-8970-4918-8798-ed567ea8041d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Select Slot 5"",
                    ""type"": ""Button"",
                    ""id"": ""ae909092-432c-4db6-b365-85d1c71fe1af"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Select Slot 6"",
                    ""type"": ""Button"",
                    ""id"": ""1fe77dbd-fc98-4820-a637-b3b1380a4ef4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Select Slot 7"",
                    ""type"": ""Button"",
                    ""id"": ""7bcd7ca3-609f-4f9c-8afa-f457d7e5a9ba"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Select Slot 8"",
                    ""type"": ""Button"",
                    ""id"": ""16dc3132-683b-4d40-b3af-68526af0bf1c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Select Slot 9"",
                    ""type"": ""Button"",
                    ""id"": ""8b0bc1a3-d721-4899-b188-b1adbbfd1b71"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Drop"",
                    ""type"": ""Button"",
                    ""id"": ""2ab23f54-9c76-4307-933c-958cfea7ad35"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory Swap"",
                    ""type"": ""Button"",
                    ""id"": ""6f30d7dd-7db1-4388-bc7b-003ad8f37d9e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""19d04cde-9f48-4a90-885e-cd9854ae3503"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Shoulders [Gamepad]"",
                    ""id"": ""ef3d7eab-41b0-4b02-96de-98f35002f4f8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory Scroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e9f934f3-99d9-48f5-811d-4ed904f896ed"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""bcb4cd5e-c2a7-4b1f-bd82-a9f316a88273"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2f358c72-9b00-4fb1-86be-f7b90777756b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f800f15-dc50-4483-9a04-b65450227556"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""494240cf-a9c3-4b05-8f6c-afbadbcc1570"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3800cc54-8dd9-43bb-ab57-c89526a64fbc"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Select Slot 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd002b33-2093-4210-8da9-ac823c9a704a"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d1aadff-40b8-43e3-84e6-8a9257129c49"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a9caa08-0098-4a04-ab2e-47dbe60bcd6d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Select Slot 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cba4905d-a7c5-45c8-a162-b44558a6ae37"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""640a6f9e-4773-4e62-8e05-64222953e515"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ed281eb-5130-48e4-943b-994f383b09ee"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Select Slot 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18fe6701-0733-48ec-9fd6-bd319aa1bb11"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""446408d5-fc9e-4483-9850-608cd7d27a95"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89062a83-1743-4646-bb40-5a25905c6dae"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Select Slot 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3aa71da-a5ef-4a83-a79d-4c5c42487ee5"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c90b6d17-84d2-43b3-8871-4e3ad1b8c9a8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c32a4fa-4e5a-4d14-bc3f-73a4917c3853"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Select Slot 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a87e99ef-56e5-48ba-8b9a-5b6b8a378d38"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edd0c723-34c9-47f1-9a3d-4c2128a9f9ab"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc6389a3-75ee-41e3-8e34-b3c4a0a45ed0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Select Slot 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f837205f-91ea-41ef-b4cf-5845cf3f6747"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed3b8c67-674a-4f33-aa02-c609c4dd7db5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c948f25d-145a-4153-adf4-d5f77a5ad884"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Select Slot 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b51465f-d479-4781-bf0e-3bd254a74a98"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfcc56be-5537-4027-9661-973281dca06f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d47fb6c6-26e1-4ab2-bb8a-7416512bbdb4"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Select Slot 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba3c4398-c037-4d77-a0c0-da52a174440e"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07bee29b-8a55-4602-a70e-aee198fb7a49"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Select Slot 9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""320d6748-d831-4909-b0a2-ae1bc96a10bf"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Select Slot 9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d7c7bdd-f610-4939-985f-489088ab0e24"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e40791ca-a4f0-40ce-8359-20da7e017b44"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca308e17-79f3-45b0-9c5c-29a9982d8181"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""657efaab-a233-4700-8aa5-c39fcdb3217b"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Swap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""946a6cb4-ebae-439d-9aa5-3e9b6a1bc6b8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Inventory Swap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f334eb23-9da2-472c-8187-aa83d200ebcb"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Inventory Swap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""5bc2487e-37a3-4b3f-8ba4-ce368c36af86"",
            ""actions"": [
                {
                    ""name"": ""Menu Open"",
                    ""type"": ""Button"",
                    ""id"": ""8e3fb755-51ef-4ceb-87ef-9a6250cc04fe"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu Profile Open"",
                    ""type"": ""Button"",
                    ""id"": ""bac62414-96ba-40c4-83dc-03cf206d7181"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu Minimap Open"",
                    ""type"": ""Button"",
                    ""id"": ""62298e1f-edf2-4f43-b04e-878ed20d7322"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""aafa4f6d-00e6-4cb1-9813-ea6651b0467b"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Menu Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c88e947-53fb-418b-b42d-f3eab8386e46"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Menu Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d56dbf1-2b88-4fa4-ab9e-435fff8f807c"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Menu Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c38a9f0-605e-4232-b06d-f37b1f0087a9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Menu Profile Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc643a41-3db3-41cb-8696-4c0f6eaab374"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Menu Profile Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27b83401-8ffa-40d7-9587-85073ac40bcd"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Menu Profile Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""920913d9-7862-4097-aa58-333b52cde7bf"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Menu Minimap Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eec8205f-c61c-44ec-838c-121b39726639"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Menu Minimap Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86f7854c-fd66-401e-8a94-9fbd50824990"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Menu Minimap Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Chat"",
            ""id"": ""2009432f-5dc5-4021-9125-25b3e9b81651"",
            ""actions"": [
                {
                    ""name"": ""Chat Public Start"",
                    ""type"": ""Button"",
                    ""id"": ""4ccdc5f0-d534-4ea7-a6d8-ce380d707823"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chat Guild Start"",
                    ""type"": ""Button"",
                    ""id"": ""f7238d6c-5451-408b-893e-d439ef9234c4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chat Private Start"",
                    ""type"": ""Button"",
                    ""id"": ""f01c18ce-1a84-44ab-91fa-fa74f29716c3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chat Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""d6a53117-f5fd-44d2-907f-2919a968fd93"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Chat Send"",
                    ""type"": ""Button"",
                    ""id"": ""0cf246bc-d169-40a3-b4cf-3090c9c187bd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ping"",
                    ""type"": ""Button"",
                    ""id"": ""d41e207a-6384-473c-b86d-1a602c65d2e2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Emote"",
                    ""type"": ""Button"",
                    ""id"": ""d9145eee-9257-483f-ae48-172e2f3c05a1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""efbf9d3f-c707-4ba3-815e-530e0ef26adf"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Public Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2118269-519e-4501-a0ac-8af548720bbc"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Public Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1720dbf8-f137-4c9e-9241-07acabd337ea"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Chat Public Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c9c075e-f4a6-480f-b434-afc49f9dc8ed"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Guild Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82b9cb00-c58b-4f03-9bbd-7b6c9768de63"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Guild Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59a3b6a7-504c-4db8-b6c2-804c735e2d16"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Chat Guild Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af0e5bb9-a859-4627-9a33-bc93f9c46ea8"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Private Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfc2d375-e4ad-4fef-a372-714eef598b0e"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Private Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0cf4df5-f7f4-41cb-80a4-3fc9a6ac0119"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Chat Private Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b608a39a-fde8-483b-a458-d8daa9f0fd90"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bc3e0a9-8a4d-4c25-8877-2a79f119a586"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56e09c26-d86a-410d-b5d3-6261ee9bf979"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Chat Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83c49b0d-2ad4-47cc-9d54-4ceb52e90aa4"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Send"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5d5472b-4f1f-43f2-b389-b627de497deb"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Chat Send"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65fa0b7b-e2d4-4311-af08-fde414ecfc0f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Chat Send"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5d30ac1-c1a5-4827-83fd-de1f80bb4040"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Ping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f4c4531-978c-49ec-9f03-91ed6a8232e2"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Ping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5a2cb04-a6a8-4da8-9924-1ff45618028c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Ping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18e5679d-90e3-427c-b6e3-ca8193c505b9"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Emote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be26acfd-3d78-4b6c-9cd7-b11c374ee83a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Emote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d08f958d-643f-410e-b9fa-7b1235bd8a13"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Emote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Camera"",
            ""id"": ""df472513-242f-4b10-a73e-e627c66b4556"",
            ""actions"": [
                {
                    ""name"": ""Camera Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""baa69fa1-f1d5-4fee-89f1-7da846ca76ec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""be849998-5e5f-43f7-ac8b-1b4e1d9874fb"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Scroll [Mouse]"",
                    ""id"": ""19be3f31-7c85-4b4c-8c49-8453be331988"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""f98f7ce7-7c34-45a1-9093-33ddb3b7613c"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""dc37741b-8fbb-4fe0-a52e-3a4e14ef0adb"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0635628a-7bb7-4948-9c12-a4956999f246"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a617e5d-fc2a-47bb-80d4-6af8e35d2144"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Camera Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""QE [Keyboard]"",
                    ""id"": ""4e6005c1-0b5a-4537-afa9-8e4c1cdb5337"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""25174879-b4f6-408c-a7b0-3201b0dffd3a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""39a52fa0-b323-4b18-9e32-6ec27695f42c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""cc530e3f-ef78-4194-9347-481a6c00fe90"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""fbdefb63-76c9-4b98-ac7e-6db1f7d3377d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""66b6d7d7-cd22-4af3-9f48-3f940f542f21"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""74e936ce-5425-4340-b976-b1d30e72eedc"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""5da3593c-ac50-4c1b-bab0-098063c8cd7a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""316237b7-74b9-40d5-9c4d-b8ca0f441a1b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Minimap"",
            ""id"": ""3ef65c31-3ca9-4678-832a-ae92a40b5b6b"",
            ""actions"": [
                {
                    ""name"": ""Zoom Minimap"",
                    ""type"": ""Value"",
                    ""id"": ""388f48db-b07e-43bf-b224-d2161c38b6d0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""be87d7fa-506a-42aa-8dec-1f5bc0b60a93"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Zoom Minimap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e53acca-d032-4043-a75d-c2d15bb2ec74"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom Minimap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9eadb58a-3fb1-4acb-8726-4f93438a1931"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Zoom Minimap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Cheats"",
            ""id"": ""3ad15d18-5d7d-40eb-bb8c-e129ded81d90"",
            ""actions"": [
                {
                    ""name"": ""Debug Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""0a7b4843-ddaa-40d1-821e-dfa3b2adf6ce"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0412146b-a7b0-4230-91c6-42aa7208a2ea"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Debug Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""128de160-4f87-46f8-a403-5f208e0546ba"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard"",
                    ""action"": ""Debug Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ee0060c-790a-4c5a-8b45-e474b0365f14"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Debug Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Default"",
            ""bindingGroup"": ""Default"",
            ""devices"": []
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touchscreen"",
            ""bindingGroup"": ""Touchscreen"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Gameplay
            m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
            m_Gameplay_GameplayMove = m_Gameplay.FindAction("Gameplay Move", throwIfNotFound: true);
            m_Gameplay_GameplayAim = m_Gameplay.FindAction("Gameplay Aim", throwIfNotFound: true);
            m_Gameplay_GameplayInteract = m_Gameplay.FindAction("Gameplay Interact", throwIfNotFound: true);
            m_Gameplay_GameplayAttackToggle = m_Gameplay.FindAction("Gameplay Attack Toggle", throwIfNotFound: true);
            m_Gameplay_GameplayQuickHeal = m_Gameplay.FindAction("Gameplay Quick Heal", throwIfNotFound: true);
            m_Gameplay_GameplayExit = m_Gameplay.FindAction("Gameplay Exit", throwIfNotFound: true);
            m_Gameplay_GameplayCancel = m_Gameplay.FindAction("Gameplay Cancel", throwIfNotFound: true);
            // Inventory
            m_Inventory = asset.FindActionMap("Inventory", throwIfNotFound: true);
            m_Inventory_InventoryScroll = m_Inventory.FindAction("Inventory Scroll", throwIfNotFound: true);
            m_Inventory_InventorySelectSlot1 = m_Inventory.FindAction("Inventory Select Slot 1", throwIfNotFound: true);
            m_Inventory_InventorySelectSlot2 = m_Inventory.FindAction("Inventory Select Slot 2", throwIfNotFound: true);
            m_Inventory_InventorySelectSlot3 = m_Inventory.FindAction("Inventory Select Slot 3", throwIfNotFound: true);
            m_Inventory_InventorySelectSlot4 = m_Inventory.FindAction("Inventory Select Slot 4", throwIfNotFound: true);
            m_Inventory_InventorySelectSlot5 = m_Inventory.FindAction("Inventory Select Slot 5", throwIfNotFound: true);
            m_Inventory_InventorySelectSlot6 = m_Inventory.FindAction("Inventory Select Slot 6", throwIfNotFound: true);
            m_Inventory_InventorySelectSlot7 = m_Inventory.FindAction("Inventory Select Slot 7", throwIfNotFound: true);
            m_Inventory_InventorySelectSlot8 = m_Inventory.FindAction("Inventory Select Slot 8", throwIfNotFound: true);
            m_Inventory_InventorySelectSlot9 = m_Inventory.FindAction("Inventory Select Slot 9", throwIfNotFound: true);
            m_Inventory_InventoryDrop = m_Inventory.FindAction("Inventory Drop", throwIfNotFound: true);
            m_Inventory_InventorySwap = m_Inventory.FindAction("Inventory Swap", throwIfNotFound: true);
            // Menu
            m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
            m_Menu_MenuOpen = m_Menu.FindAction("Menu Open", throwIfNotFound: true);
            m_Menu_MenuProfileOpen = m_Menu.FindAction("Menu Profile Open", throwIfNotFound: true);
            m_Menu_MenuMinimapOpen = m_Menu.FindAction("Menu Minimap Open", throwIfNotFound: true);
            // Chat
            m_Chat = asset.FindActionMap("Chat", throwIfNotFound: true);
            m_Chat_ChatPublicStart = m_Chat.FindAction("Chat Public Start", throwIfNotFound: true);
            m_Chat_ChatGuildStart = m_Chat.FindAction("Chat Guild Start", throwIfNotFound: true);
            m_Chat_ChatPrivateStart = m_Chat.FindAction("Chat Private Start", throwIfNotFound: true);
            m_Chat_ChatCancel = m_Chat.FindAction("Chat Cancel", throwIfNotFound: true);
            m_Chat_ChatSend = m_Chat.FindAction("Chat Send", throwIfNotFound: true);
            m_Chat_Ping = m_Chat.FindAction("Ping", throwIfNotFound: true);
            m_Chat_Emote = m_Chat.FindAction("Emote", throwIfNotFound: true);
            // Camera
            m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
            m_Camera_CameraZoom = m_Camera.FindAction("Camera Zoom", throwIfNotFound: true);
            m_Camera_CameraRotate = m_Camera.FindAction("Camera Rotate", throwIfNotFound: true);
            // Minimap
            m_Minimap = asset.FindActionMap("Minimap", throwIfNotFound: true);
            m_Minimap_ZoomMinimap = m_Minimap.FindAction("Zoom Minimap", throwIfNotFound: true);
            // Cheats
            m_Cheats = asset.FindActionMap("Cheats", throwIfNotFound: true);
            m_Cheats_DebugToggle = m_Cheats.FindAction("Debug Toggle", throwIfNotFound: true);
        }

        ~@InputActions()
        {
            UnityEngine.Debug.Assert(!m_Gameplay.enabled, "This will cause a leak and performance issues, InputActions.Gameplay.Disable() has not been called.");
            UnityEngine.Debug.Assert(!m_Inventory.enabled, "This will cause a leak and performance issues, InputActions.Inventory.Disable() has not been called.");
            UnityEngine.Debug.Assert(!m_Menu.enabled, "This will cause a leak and performance issues, InputActions.Menu.Disable() has not been called.");
            UnityEngine.Debug.Assert(!m_Chat.enabled, "This will cause a leak and performance issues, InputActions.Chat.Disable() has not been called.");
            UnityEngine.Debug.Assert(!m_Camera.enabled, "This will cause a leak and performance issues, InputActions.Camera.Disable() has not been called.");
            UnityEngine.Debug.Assert(!m_Minimap.enabled, "This will cause a leak and performance issues, InputActions.Minimap.Disable() has not been called.");
            UnityEngine.Debug.Assert(!m_Cheats.enabled, "This will cause a leak and performance issues, InputActions.Cheats.Disable() has not been called.");
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Gameplay
        private readonly InputActionMap m_Gameplay;
        private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
        private readonly InputAction m_Gameplay_GameplayMove;
        private readonly InputAction m_Gameplay_GameplayAim;
        private readonly InputAction m_Gameplay_GameplayInteract;
        private readonly InputAction m_Gameplay_GameplayAttackToggle;
        private readonly InputAction m_Gameplay_GameplayQuickHeal;
        private readonly InputAction m_Gameplay_GameplayExit;
        private readonly InputAction m_Gameplay_GameplayCancel;
        public struct GameplayActions
        {
            private @InputActions m_Wrapper;
            public GameplayActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @GameplayMove => m_Wrapper.m_Gameplay_GameplayMove;
            public InputAction @GameplayAim => m_Wrapper.m_Gameplay_GameplayAim;
            public InputAction @GameplayInteract => m_Wrapper.m_Gameplay_GameplayInteract;
            public InputAction @GameplayAttackToggle => m_Wrapper.m_Gameplay_GameplayAttackToggle;
            public InputAction @GameplayQuickHeal => m_Wrapper.m_Gameplay_GameplayQuickHeal;
            public InputAction @GameplayExit => m_Wrapper.m_Gameplay_GameplayExit;
            public InputAction @GameplayCancel => m_Wrapper.m_Gameplay_GameplayCancel;
            public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
            public void AddCallbacks(IGameplayActions instance)
            {
                if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
                @GameplayMove.started += instance.OnGameplayMove;
                @GameplayMove.performed += instance.OnGameplayMove;
                @GameplayMove.canceled += instance.OnGameplayMove;
                @GameplayAim.started += instance.OnGameplayAim;
                @GameplayAim.performed += instance.OnGameplayAim;
                @GameplayAim.canceled += instance.OnGameplayAim;
                @GameplayInteract.started += instance.OnGameplayInteract;
                @GameplayInteract.performed += instance.OnGameplayInteract;
                @GameplayInteract.canceled += instance.OnGameplayInteract;
                @GameplayAttackToggle.started += instance.OnGameplayAttackToggle;
                @GameplayAttackToggle.performed += instance.OnGameplayAttackToggle;
                @GameplayAttackToggle.canceled += instance.OnGameplayAttackToggle;
                @GameplayQuickHeal.started += instance.OnGameplayQuickHeal;
                @GameplayQuickHeal.performed += instance.OnGameplayQuickHeal;
                @GameplayQuickHeal.canceled += instance.OnGameplayQuickHeal;
                @GameplayExit.started += instance.OnGameplayExit;
                @GameplayExit.performed += instance.OnGameplayExit;
                @GameplayExit.canceled += instance.OnGameplayExit;
                @GameplayCancel.started += instance.OnGameplayCancel;
                @GameplayCancel.performed += instance.OnGameplayCancel;
                @GameplayCancel.canceled += instance.OnGameplayCancel;
            }

            private void UnregisterCallbacks(IGameplayActions instance)
            {
                @GameplayMove.started -= instance.OnGameplayMove;
                @GameplayMove.performed -= instance.OnGameplayMove;
                @GameplayMove.canceled -= instance.OnGameplayMove;
                @GameplayAim.started -= instance.OnGameplayAim;
                @GameplayAim.performed -= instance.OnGameplayAim;
                @GameplayAim.canceled -= instance.OnGameplayAim;
                @GameplayInteract.started -= instance.OnGameplayInteract;
                @GameplayInteract.performed -= instance.OnGameplayInteract;
                @GameplayInteract.canceled -= instance.OnGameplayInteract;
                @GameplayAttackToggle.started -= instance.OnGameplayAttackToggle;
                @GameplayAttackToggle.performed -= instance.OnGameplayAttackToggle;
                @GameplayAttackToggle.canceled -= instance.OnGameplayAttackToggle;
                @GameplayQuickHeal.started -= instance.OnGameplayQuickHeal;
                @GameplayQuickHeal.performed -= instance.OnGameplayQuickHeal;
                @GameplayQuickHeal.canceled -= instance.OnGameplayQuickHeal;
                @GameplayExit.started -= instance.OnGameplayExit;
                @GameplayExit.performed -= instance.OnGameplayExit;
                @GameplayExit.canceled -= instance.OnGameplayExit;
                @GameplayCancel.started -= instance.OnGameplayCancel;
                @GameplayCancel.performed -= instance.OnGameplayCancel;
                @GameplayCancel.canceled -= instance.OnGameplayCancel;
            }

            public void RemoveCallbacks(IGameplayActions instance)
            {
                if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGameplayActions instance)
            {
                foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GameplayActions @Gameplay => new GameplayActions(this);

        // Inventory
        private readonly InputActionMap m_Inventory;
        private List<IInventoryActions> m_InventoryActionsCallbackInterfaces = new List<IInventoryActions>();
        private readonly InputAction m_Inventory_InventoryScroll;
        private readonly InputAction m_Inventory_InventorySelectSlot1;
        private readonly InputAction m_Inventory_InventorySelectSlot2;
        private readonly InputAction m_Inventory_InventorySelectSlot3;
        private readonly InputAction m_Inventory_InventorySelectSlot4;
        private readonly InputAction m_Inventory_InventorySelectSlot5;
        private readonly InputAction m_Inventory_InventorySelectSlot6;
        private readonly InputAction m_Inventory_InventorySelectSlot7;
        private readonly InputAction m_Inventory_InventorySelectSlot8;
        private readonly InputAction m_Inventory_InventorySelectSlot9;
        private readonly InputAction m_Inventory_InventoryDrop;
        private readonly InputAction m_Inventory_InventorySwap;
        public struct InventoryActions
        {
            private @InputActions m_Wrapper;
            public InventoryActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @InventoryScroll => m_Wrapper.m_Inventory_InventoryScroll;
            public InputAction @InventorySelectSlot1 => m_Wrapper.m_Inventory_InventorySelectSlot1;
            public InputAction @InventorySelectSlot2 => m_Wrapper.m_Inventory_InventorySelectSlot2;
            public InputAction @InventorySelectSlot3 => m_Wrapper.m_Inventory_InventorySelectSlot3;
            public InputAction @InventorySelectSlot4 => m_Wrapper.m_Inventory_InventorySelectSlot4;
            public InputAction @InventorySelectSlot5 => m_Wrapper.m_Inventory_InventorySelectSlot5;
            public InputAction @InventorySelectSlot6 => m_Wrapper.m_Inventory_InventorySelectSlot6;
            public InputAction @InventorySelectSlot7 => m_Wrapper.m_Inventory_InventorySelectSlot7;
            public InputAction @InventorySelectSlot8 => m_Wrapper.m_Inventory_InventorySelectSlot8;
            public InputAction @InventorySelectSlot9 => m_Wrapper.m_Inventory_InventorySelectSlot9;
            public InputAction @InventoryDrop => m_Wrapper.m_Inventory_InventoryDrop;
            public InputAction @InventorySwap => m_Wrapper.m_Inventory_InventorySwap;
            public InputActionMap Get() { return m_Wrapper.m_Inventory; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(InventoryActions set) { return set.Get(); }
            public void AddCallbacks(IInventoryActions instance)
            {
                if (instance == null || m_Wrapper.m_InventoryActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_InventoryActionsCallbackInterfaces.Add(instance);
                @InventoryScroll.started += instance.OnInventoryScroll;
                @InventoryScroll.performed += instance.OnInventoryScroll;
                @InventoryScroll.canceled += instance.OnInventoryScroll;
                @InventorySelectSlot1.started += instance.OnInventorySelectSlot1;
                @InventorySelectSlot1.performed += instance.OnInventorySelectSlot1;
                @InventorySelectSlot1.canceled += instance.OnInventorySelectSlot1;
                @InventorySelectSlot2.started += instance.OnInventorySelectSlot2;
                @InventorySelectSlot2.performed += instance.OnInventorySelectSlot2;
                @InventorySelectSlot2.canceled += instance.OnInventorySelectSlot2;
                @InventorySelectSlot3.started += instance.OnInventorySelectSlot3;
                @InventorySelectSlot3.performed += instance.OnInventorySelectSlot3;
                @InventorySelectSlot3.canceled += instance.OnInventorySelectSlot3;
                @InventorySelectSlot4.started += instance.OnInventorySelectSlot4;
                @InventorySelectSlot4.performed += instance.OnInventorySelectSlot4;
                @InventorySelectSlot4.canceled += instance.OnInventorySelectSlot4;
                @InventorySelectSlot5.started += instance.OnInventorySelectSlot5;
                @InventorySelectSlot5.performed += instance.OnInventorySelectSlot5;
                @InventorySelectSlot5.canceled += instance.OnInventorySelectSlot5;
                @InventorySelectSlot6.started += instance.OnInventorySelectSlot6;
                @InventorySelectSlot6.performed += instance.OnInventorySelectSlot6;
                @InventorySelectSlot6.canceled += instance.OnInventorySelectSlot6;
                @InventorySelectSlot7.started += instance.OnInventorySelectSlot7;
                @InventorySelectSlot7.performed += instance.OnInventorySelectSlot7;
                @InventorySelectSlot7.canceled += instance.OnInventorySelectSlot7;
                @InventorySelectSlot8.started += instance.OnInventorySelectSlot8;
                @InventorySelectSlot8.performed += instance.OnInventorySelectSlot8;
                @InventorySelectSlot8.canceled += instance.OnInventorySelectSlot8;
                @InventorySelectSlot9.started += instance.OnInventorySelectSlot9;
                @InventorySelectSlot9.performed += instance.OnInventorySelectSlot9;
                @InventorySelectSlot9.canceled += instance.OnInventorySelectSlot9;
                @InventoryDrop.started += instance.OnInventoryDrop;
                @InventoryDrop.performed += instance.OnInventoryDrop;
                @InventoryDrop.canceled += instance.OnInventoryDrop;
                @InventorySwap.started += instance.OnInventorySwap;
                @InventorySwap.performed += instance.OnInventorySwap;
                @InventorySwap.canceled += instance.OnInventorySwap;
            }

            private void UnregisterCallbacks(IInventoryActions instance)
            {
                @InventoryScroll.started -= instance.OnInventoryScroll;
                @InventoryScroll.performed -= instance.OnInventoryScroll;
                @InventoryScroll.canceled -= instance.OnInventoryScroll;
                @InventorySelectSlot1.started -= instance.OnInventorySelectSlot1;
                @InventorySelectSlot1.performed -= instance.OnInventorySelectSlot1;
                @InventorySelectSlot1.canceled -= instance.OnInventorySelectSlot1;
                @InventorySelectSlot2.started -= instance.OnInventorySelectSlot2;
                @InventorySelectSlot2.performed -= instance.OnInventorySelectSlot2;
                @InventorySelectSlot2.canceled -= instance.OnInventorySelectSlot2;
                @InventorySelectSlot3.started -= instance.OnInventorySelectSlot3;
                @InventorySelectSlot3.performed -= instance.OnInventorySelectSlot3;
                @InventorySelectSlot3.canceled -= instance.OnInventorySelectSlot3;
                @InventorySelectSlot4.started -= instance.OnInventorySelectSlot4;
                @InventorySelectSlot4.performed -= instance.OnInventorySelectSlot4;
                @InventorySelectSlot4.canceled -= instance.OnInventorySelectSlot4;
                @InventorySelectSlot5.started -= instance.OnInventorySelectSlot5;
                @InventorySelectSlot5.performed -= instance.OnInventorySelectSlot5;
                @InventorySelectSlot5.canceled -= instance.OnInventorySelectSlot5;
                @InventorySelectSlot6.started -= instance.OnInventorySelectSlot6;
                @InventorySelectSlot6.performed -= instance.OnInventorySelectSlot6;
                @InventorySelectSlot6.canceled -= instance.OnInventorySelectSlot6;
                @InventorySelectSlot7.started -= instance.OnInventorySelectSlot7;
                @InventorySelectSlot7.performed -= instance.OnInventorySelectSlot7;
                @InventorySelectSlot7.canceled -= instance.OnInventorySelectSlot7;
                @InventorySelectSlot8.started -= instance.OnInventorySelectSlot8;
                @InventorySelectSlot8.performed -= instance.OnInventorySelectSlot8;
                @InventorySelectSlot8.canceled -= instance.OnInventorySelectSlot8;
                @InventorySelectSlot9.started -= instance.OnInventorySelectSlot9;
                @InventorySelectSlot9.performed -= instance.OnInventorySelectSlot9;
                @InventorySelectSlot9.canceled -= instance.OnInventorySelectSlot9;
                @InventoryDrop.started -= instance.OnInventoryDrop;
                @InventoryDrop.performed -= instance.OnInventoryDrop;
                @InventoryDrop.canceled -= instance.OnInventoryDrop;
                @InventorySwap.started -= instance.OnInventorySwap;
                @InventorySwap.performed -= instance.OnInventorySwap;
                @InventorySwap.canceled -= instance.OnInventorySwap;
            }

            public void RemoveCallbacks(IInventoryActions instance)
            {
                if (m_Wrapper.m_InventoryActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IInventoryActions instance)
            {
                foreach (var item in m_Wrapper.m_InventoryActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_InventoryActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public InventoryActions @Inventory => new InventoryActions(this);

        // Menu
        private readonly InputActionMap m_Menu;
        private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
        private readonly InputAction m_Menu_MenuOpen;
        private readonly InputAction m_Menu_MenuProfileOpen;
        private readonly InputAction m_Menu_MenuMinimapOpen;
        public struct MenuActions
        {
            private @InputActions m_Wrapper;
            public MenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @MenuOpen => m_Wrapper.m_Menu_MenuOpen;
            public InputAction @MenuProfileOpen => m_Wrapper.m_Menu_MenuProfileOpen;
            public InputAction @MenuMinimapOpen => m_Wrapper.m_Menu_MenuMinimapOpen;
            public InputActionMap Get() { return m_Wrapper.m_Menu; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
            public void AddCallbacks(IMenuActions instance)
            {
                if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
                @MenuOpen.started += instance.OnMenuOpen;
                @MenuOpen.performed += instance.OnMenuOpen;
                @MenuOpen.canceled += instance.OnMenuOpen;
                @MenuProfileOpen.started += instance.OnMenuProfileOpen;
                @MenuProfileOpen.performed += instance.OnMenuProfileOpen;
                @MenuProfileOpen.canceled += instance.OnMenuProfileOpen;
                @MenuMinimapOpen.started += instance.OnMenuMinimapOpen;
                @MenuMinimapOpen.performed += instance.OnMenuMinimapOpen;
                @MenuMinimapOpen.canceled += instance.OnMenuMinimapOpen;
            }

            private void UnregisterCallbacks(IMenuActions instance)
            {
                @MenuOpen.started -= instance.OnMenuOpen;
                @MenuOpen.performed -= instance.OnMenuOpen;
                @MenuOpen.canceled -= instance.OnMenuOpen;
                @MenuProfileOpen.started -= instance.OnMenuProfileOpen;
                @MenuProfileOpen.performed -= instance.OnMenuProfileOpen;
                @MenuProfileOpen.canceled -= instance.OnMenuProfileOpen;
                @MenuMinimapOpen.started -= instance.OnMenuMinimapOpen;
                @MenuMinimapOpen.performed -= instance.OnMenuMinimapOpen;
                @MenuMinimapOpen.canceled -= instance.OnMenuMinimapOpen;
            }

            public void RemoveCallbacks(IMenuActions instance)
            {
                if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMenuActions instance)
            {
                foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MenuActions @Menu => new MenuActions(this);

        // Chat
        private readonly InputActionMap m_Chat;
        private List<IChatActions> m_ChatActionsCallbackInterfaces = new List<IChatActions>();
        private readonly InputAction m_Chat_ChatPublicStart;
        private readonly InputAction m_Chat_ChatGuildStart;
        private readonly InputAction m_Chat_ChatPrivateStart;
        private readonly InputAction m_Chat_ChatCancel;
        private readonly InputAction m_Chat_ChatSend;
        private readonly InputAction m_Chat_Ping;
        private readonly InputAction m_Chat_Emote;
        public struct ChatActions
        {
            private @InputActions m_Wrapper;
            public ChatActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @ChatPublicStart => m_Wrapper.m_Chat_ChatPublicStart;
            public InputAction @ChatGuildStart => m_Wrapper.m_Chat_ChatGuildStart;
            public InputAction @ChatPrivateStart => m_Wrapper.m_Chat_ChatPrivateStart;
            public InputAction @ChatCancel => m_Wrapper.m_Chat_ChatCancel;
            public InputAction @ChatSend => m_Wrapper.m_Chat_ChatSend;
            public InputAction @Ping => m_Wrapper.m_Chat_Ping;
            public InputAction @Emote => m_Wrapper.m_Chat_Emote;
            public InputActionMap Get() { return m_Wrapper.m_Chat; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ChatActions set) { return set.Get(); }
            public void AddCallbacks(IChatActions instance)
            {
                if (instance == null || m_Wrapper.m_ChatActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ChatActionsCallbackInterfaces.Add(instance);
                @ChatPublicStart.started += instance.OnChatPublicStart;
                @ChatPublicStart.performed += instance.OnChatPublicStart;
                @ChatPublicStart.canceled += instance.OnChatPublicStart;
                @ChatGuildStart.started += instance.OnChatGuildStart;
                @ChatGuildStart.performed += instance.OnChatGuildStart;
                @ChatGuildStart.canceled += instance.OnChatGuildStart;
                @ChatPrivateStart.started += instance.OnChatPrivateStart;
                @ChatPrivateStart.performed += instance.OnChatPrivateStart;
                @ChatPrivateStart.canceled += instance.OnChatPrivateStart;
                @ChatCancel.started += instance.OnChatCancel;
                @ChatCancel.performed += instance.OnChatCancel;
                @ChatCancel.canceled += instance.OnChatCancel;
                @ChatSend.started += instance.OnChatSend;
                @ChatSend.performed += instance.OnChatSend;
                @ChatSend.canceled += instance.OnChatSend;
                @Ping.started += instance.OnPing;
                @Ping.performed += instance.OnPing;
                @Ping.canceled += instance.OnPing;
                @Emote.started += instance.OnEmote;
                @Emote.performed += instance.OnEmote;
                @Emote.canceled += instance.OnEmote;
            }

            private void UnregisterCallbacks(IChatActions instance)
            {
                @ChatPublicStart.started -= instance.OnChatPublicStart;
                @ChatPublicStart.performed -= instance.OnChatPublicStart;
                @ChatPublicStart.canceled -= instance.OnChatPublicStart;
                @ChatGuildStart.started -= instance.OnChatGuildStart;
                @ChatGuildStart.performed -= instance.OnChatGuildStart;
                @ChatGuildStart.canceled -= instance.OnChatGuildStart;
                @ChatPrivateStart.started -= instance.OnChatPrivateStart;
                @ChatPrivateStart.performed -= instance.OnChatPrivateStart;
                @ChatPrivateStart.canceled -= instance.OnChatPrivateStart;
                @ChatCancel.started -= instance.OnChatCancel;
                @ChatCancel.performed -= instance.OnChatCancel;
                @ChatCancel.canceled -= instance.OnChatCancel;
                @ChatSend.started -= instance.OnChatSend;
                @ChatSend.performed -= instance.OnChatSend;
                @ChatSend.canceled -= instance.OnChatSend;
                @Ping.started -= instance.OnPing;
                @Ping.performed -= instance.OnPing;
                @Ping.canceled -= instance.OnPing;
                @Emote.started -= instance.OnEmote;
                @Emote.performed -= instance.OnEmote;
                @Emote.canceled -= instance.OnEmote;
            }

            public void RemoveCallbacks(IChatActions instance)
            {
                if (m_Wrapper.m_ChatActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IChatActions instance)
            {
                foreach (var item in m_Wrapper.m_ChatActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ChatActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ChatActions @Chat => new ChatActions(this);

        // Camera
        private readonly InputActionMap m_Camera;
        private List<ICameraActions> m_CameraActionsCallbackInterfaces = new List<ICameraActions>();
        private readonly InputAction m_Camera_CameraZoom;
        private readonly InputAction m_Camera_CameraRotate;
        public struct CameraActions
        {
            private @InputActions m_Wrapper;
            public CameraActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @CameraZoom => m_Wrapper.m_Camera_CameraZoom;
            public InputAction @CameraRotate => m_Wrapper.m_Camera_CameraRotate;
            public InputActionMap Get() { return m_Wrapper.m_Camera; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
            public void AddCallbacks(ICameraActions instance)
            {
                if (instance == null || m_Wrapper.m_CameraActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_CameraActionsCallbackInterfaces.Add(instance);
                @CameraZoom.started += instance.OnCameraZoom;
                @CameraZoom.performed += instance.OnCameraZoom;
                @CameraZoom.canceled += instance.OnCameraZoom;
                @CameraRotate.started += instance.OnCameraRotate;
                @CameraRotate.performed += instance.OnCameraRotate;
                @CameraRotate.canceled += instance.OnCameraRotate;
            }

            private void UnregisterCallbacks(ICameraActions instance)
            {
                @CameraZoom.started -= instance.OnCameraZoom;
                @CameraZoom.performed -= instance.OnCameraZoom;
                @CameraZoom.canceled -= instance.OnCameraZoom;
                @CameraRotate.started -= instance.OnCameraRotate;
                @CameraRotate.performed -= instance.OnCameraRotate;
                @CameraRotate.canceled -= instance.OnCameraRotate;
            }

            public void RemoveCallbacks(ICameraActions instance)
            {
                if (m_Wrapper.m_CameraActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ICameraActions instance)
            {
                foreach (var item in m_Wrapper.m_CameraActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_CameraActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public CameraActions @Camera => new CameraActions(this);

        // Minimap
        private readonly InputActionMap m_Minimap;
        private List<IMinimapActions> m_MinimapActionsCallbackInterfaces = new List<IMinimapActions>();
        private readonly InputAction m_Minimap_ZoomMinimap;
        public struct MinimapActions
        {
            private @InputActions m_Wrapper;
            public MinimapActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @ZoomMinimap => m_Wrapper.m_Minimap_ZoomMinimap;
            public InputActionMap Get() { return m_Wrapper.m_Minimap; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MinimapActions set) { return set.Get(); }
            public void AddCallbacks(IMinimapActions instance)
            {
                if (instance == null || m_Wrapper.m_MinimapActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MinimapActionsCallbackInterfaces.Add(instance);
                @ZoomMinimap.started += instance.OnZoomMinimap;
                @ZoomMinimap.performed += instance.OnZoomMinimap;
                @ZoomMinimap.canceled += instance.OnZoomMinimap;
            }

            private void UnregisterCallbacks(IMinimapActions instance)
            {
                @ZoomMinimap.started -= instance.OnZoomMinimap;
                @ZoomMinimap.performed -= instance.OnZoomMinimap;
                @ZoomMinimap.canceled -= instance.OnZoomMinimap;
            }

            public void RemoveCallbacks(IMinimapActions instance)
            {
                if (m_Wrapper.m_MinimapActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMinimapActions instance)
            {
                foreach (var item in m_Wrapper.m_MinimapActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MinimapActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MinimapActions @Minimap => new MinimapActions(this);

        // Cheats
        private readonly InputActionMap m_Cheats;
        private List<ICheatsActions> m_CheatsActionsCallbackInterfaces = new List<ICheatsActions>();
        private readonly InputAction m_Cheats_DebugToggle;
        public struct CheatsActions
        {
            private @InputActions m_Wrapper;
            public CheatsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @DebugToggle => m_Wrapper.m_Cheats_DebugToggle;
            public InputActionMap Get() { return m_Wrapper.m_Cheats; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CheatsActions set) { return set.Get(); }
            public void AddCallbacks(ICheatsActions instance)
            {
                if (instance == null || m_Wrapper.m_CheatsActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_CheatsActionsCallbackInterfaces.Add(instance);
                @DebugToggle.started += instance.OnDebugToggle;
                @DebugToggle.performed += instance.OnDebugToggle;
                @DebugToggle.canceled += instance.OnDebugToggle;
            }

            private void UnregisterCallbacks(ICheatsActions instance)
            {
                @DebugToggle.started -= instance.OnDebugToggle;
                @DebugToggle.performed -= instance.OnDebugToggle;
                @DebugToggle.canceled -= instance.OnDebugToggle;
            }

            public void RemoveCallbacks(ICheatsActions instance)
            {
                if (m_Wrapper.m_CheatsActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ICheatsActions instance)
            {
                foreach (var item in m_Wrapper.m_CheatsActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_CheatsActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public CheatsActions @Cheats => new CheatsActions(this);
        private int m_DefaultSchemeIndex = -1;
        public InputControlScheme DefaultScheme
        {
            get
            {
                if (m_DefaultSchemeIndex == -1) m_DefaultSchemeIndex = asset.FindControlSchemeIndex("Default");
                return asset.controlSchemes[m_DefaultSchemeIndex];
            }
        }
        private int m_GamepadSchemeIndex = -1;
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        private int m_KeyboardSchemeIndex = -1;
        public InputControlScheme KeyboardScheme
        {
            get
            {
                if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
                return asset.controlSchemes[m_KeyboardSchemeIndex];
            }
        }
        private int m_TouchscreenSchemeIndex = -1;
        public InputControlScheme TouchscreenScheme
        {
            get
            {
                if (m_TouchscreenSchemeIndex == -1) m_TouchscreenSchemeIndex = asset.FindControlSchemeIndex("Touchscreen");
                return asset.controlSchemes[m_TouchscreenSchemeIndex];
            }
        }
        public interface IGameplayActions
        {
            void OnGameplayMove(InputAction.CallbackContext context);
            void OnGameplayAim(InputAction.CallbackContext context);
            void OnGameplayInteract(InputAction.CallbackContext context);
            void OnGameplayAttackToggle(InputAction.CallbackContext context);
            void OnGameplayQuickHeal(InputAction.CallbackContext context);
            void OnGameplayExit(InputAction.CallbackContext context);
            void OnGameplayCancel(InputAction.CallbackContext context);
        }
        public interface IInventoryActions
        {
            void OnInventoryScroll(InputAction.CallbackContext context);
            void OnInventorySelectSlot1(InputAction.CallbackContext context);
            void OnInventorySelectSlot2(InputAction.CallbackContext context);
            void OnInventorySelectSlot3(InputAction.CallbackContext context);
            void OnInventorySelectSlot4(InputAction.CallbackContext context);
            void OnInventorySelectSlot5(InputAction.CallbackContext context);
            void OnInventorySelectSlot6(InputAction.CallbackContext context);
            void OnInventorySelectSlot7(InputAction.CallbackContext context);
            void OnInventorySelectSlot8(InputAction.CallbackContext context);
            void OnInventorySelectSlot9(InputAction.CallbackContext context);
            void OnInventoryDrop(InputAction.CallbackContext context);
            void OnInventorySwap(InputAction.CallbackContext context);
        }
        public interface IMenuActions
        {
            void OnMenuOpen(InputAction.CallbackContext context);
            void OnMenuProfileOpen(InputAction.CallbackContext context);
            void OnMenuMinimapOpen(InputAction.CallbackContext context);
        }
        public interface IChatActions
        {
            void OnChatPublicStart(InputAction.CallbackContext context);
            void OnChatGuildStart(InputAction.CallbackContext context);
            void OnChatPrivateStart(InputAction.CallbackContext context);
            void OnChatCancel(InputAction.CallbackContext context);
            void OnChatSend(InputAction.CallbackContext context);
            void OnPing(InputAction.CallbackContext context);
            void OnEmote(InputAction.CallbackContext context);
        }
        public interface ICameraActions
        {
            void OnCameraZoom(InputAction.CallbackContext context);
            void OnCameraRotate(InputAction.CallbackContext context);
        }
        public interface IMinimapActions
        {
            void OnZoomMinimap(InputAction.CallbackContext context);
        }
        public interface ICheatsActions
        {
            void OnDebugToggle(InputAction.CallbackContext context);
        }
    }
}
